#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pase_lista")]
	public partial class PaslumBaseDatoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertTblAlumno(TblAlumno instance);
    partial void UpdateTblAlumno(TblAlumno instance);
    partial void DeleteTblAlumno(TblAlumno instance);
    partial void InsertTblAlumnoMateria(TblAlumnoMateria instance);
    partial void UpdateTblAlumnoMateria(TblAlumnoMateria instance);
    partial void DeleteTblAlumnoMateria(TblAlumnoMateria instance);
    partial void InsertTblAsistencia(TblAsistencia instance);
    partial void UpdateTblAsistencia(TblAsistencia instance);
    partial void DeleteTblAsistencia(TblAsistencia instance);
    partial void InsertTblCarrera(TblCarrera instance);
    partial void UpdateTblCarrera(TblCarrera instance);
    partial void DeleteTblCarrera(TblCarrera instance);
    partial void InsertTblCatalogoEvaluacion(TblCatalogoEvaluacion instance);
    partial void UpdateTblCatalogoEvaluacion(TblCatalogoEvaluacion instance);
    partial void DeleteTblCatalogoEvaluacion(TblCatalogoEvaluacion instance);
    partial void InsertTblCatalogoParcial(TblCatalogoParcial instance);
    partial void UpdateTblCatalogoParcial(TblCatalogoParcial instance);
    partial void DeleteTblCatalogoParcial(TblCatalogoParcial instance);
    partial void InsertTblCuatri(TblCuatri instance);
    partial void UpdateTblCuatri(TblCuatri instance);
    partial void DeleteTblCuatri(TblCuatri instance);
    partial void InsertTblDireccion(TblDireccion instance);
    partial void UpdateTblDireccion(TblDireccion instance);
    partial void DeleteTblDireccion(TblDireccion instance);
    partial void InsertTblGrupo(TblGrupo instance);
    partial void UpdateTblGrupo(TblGrupo instance);
    partial void DeleteTblGrupo(TblGrupo instance);
    partial void InsertTblMateria(TblMateria instance);
    partial void UpdateTblMateria(TblMateria instance);
    partial void DeleteTblMateria(TblMateria instance);
    partial void InsertTblNota(TblNota instance);
    partial void UpdateTblNota(TblNota instance);
    partial void DeleteTblNota(TblNota instance);
    partial void InsertTblProfesor(TblProfesor instance);
    partial void UpdateTblProfesor(TblProfesor instance);
    partial void DeleteTblProfesor(TblProfesor instance);
    partial void InsertTblTelefono(TblTelefono instance);
    partial void UpdateTblTelefono(TblTelefono instance);
    partial void DeleteTblTelefono(TblTelefono instance);
    partial void InsertTblUser(TblUser instance);
    partial void UpdateTblUser(TblUser instance);
    partial void DeleteTblUser(TblUser instance);
    #endregion
		
		public PaslumBaseDatoDataContext() : 
				base(global::Modelo.Properties.Settings.Default.pase_listaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PaslumBaseDatoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PaslumBaseDatoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PaslumBaseDatoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PaslumBaseDatoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TblAlumno> TblAlumno
		{
			get
			{
				return this.GetTable<TblAlumno>();
			}
		}
		
		public System.Data.Linq.Table<TblAlumnoMateria> TblAlumnoMateria
		{
			get
			{
				return this.GetTable<TblAlumnoMateria>();
			}
		}
		
		public System.Data.Linq.Table<TblAsistencia> TblAsistencia
		{
			get
			{
				return this.GetTable<TblAsistencia>();
			}
		}
		
		public System.Data.Linq.Table<TblCarrera> TblCarrera
		{
			get
			{
				return this.GetTable<TblCarrera>();
			}
		}
		
		public System.Data.Linq.Table<TblCatalogoEvaluacion> TblCatalogoEvaluacion
		{
			get
			{
				return this.GetTable<TblCatalogoEvaluacion>();
			}
		}
		
		public System.Data.Linq.Table<TblCatalogoParcial> TblCatalogoParcial
		{
			get
			{
				return this.GetTable<TblCatalogoParcial>();
			}
		}
		
		public System.Data.Linq.Table<TblCuatri> TblCuatri
		{
			get
			{
				return this.GetTable<TblCuatri>();
			}
		}
		
		public System.Data.Linq.Table<TblDireccion> TblDireccion
		{
			get
			{
				return this.GetTable<TblDireccion>();
			}
		}
		
		public System.Data.Linq.Table<TblGrupo> TblGrupo
		{
			get
			{
				return this.GetTable<TblGrupo>();
			}
		}
		
		public System.Data.Linq.Table<TblMateria> TblMateria
		{
			get
			{
				return this.GetTable<TblMateria>();
			}
		}
		
		public System.Data.Linq.Table<TblNota> TblNota
		{
			get
			{
				return this.GetTable<TblNota>();
			}
		}
		
		public System.Data.Linq.Table<TblProfesor> TblProfesor
		{
			get
			{
				return this.GetTable<TblProfesor>();
			}
		}
		
		public System.Data.Linq.Table<TblTelefono> TblTelefono
		{
			get
			{
				return this.GetTable<TblTelefono>();
			}
		}
		
		public System.Data.Linq.Table<TblUser> TblUser
		{
			get
			{
				return this.GetTable<TblUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblAlumno")]
	public partial class TblAlumno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strApellidoP;
		
		private string _strApellidoM;
		
		private System.Nullable<int> _intEdad;
		
		private string _strSexo;
		
		private string _strCorreo;
		
		private System.Nullable<int> _intMatricula;
		
		private string _bitFoto;
		
		private System.Nullable<int> _idDireccion;
		
		private System.Nullable<int> _idTelefono;
		
		private System.Nullable<int> _idUser;
		
		private EntitySet<TblAlumnoMateria> _TblAlumnoMateria;
		
		private EntitySet<TblAsistencia> _TblAsistencia;
		
		private EntityRef<TblDireccion> _TblDireccion;
		
		private EntityRef<TblTelefono> _TblTelefono;
		
		private EntityRef<TblUser> _TblUser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrApellidoPChanging(string value);
    partial void OnstrApellidoPChanged();
    partial void OnstrApellidoMChanging(string value);
    partial void OnstrApellidoMChanged();
    partial void OnintEdadChanging(System.Nullable<int> value);
    partial void OnintEdadChanged();
    partial void OnstrSexoChanging(string value);
    partial void OnstrSexoChanged();
    partial void OnstrCorreoChanging(string value);
    partial void OnstrCorreoChanged();
    partial void OnintMatriculaChanging(System.Nullable<int> value);
    partial void OnintMatriculaChanged();
    partial void OnbitFotoChanging(string value);
    partial void OnbitFotoChanged();
    partial void OnidDireccionChanging(System.Nullable<int> value);
    partial void OnidDireccionChanged();
    partial void OnidTelefonoChanging(System.Nullable<int> value);
    partial void OnidTelefonoChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    #endregion
		
		public TblAlumno()
		{
			this._TblAlumnoMateria = new EntitySet<TblAlumnoMateria>(new Action<TblAlumnoMateria>(this.attach_TblAlumnoMateria), new Action<TblAlumnoMateria>(this.detach_TblAlumnoMateria));
			this._TblAsistencia = new EntitySet<TblAsistencia>(new Action<TblAsistencia>(this.attach_TblAsistencia), new Action<TblAsistencia>(this.detach_TblAsistencia));
			this._TblDireccion = default(EntityRef<TblDireccion>);
			this._TblTelefono = default(EntityRef<TblTelefono>);
			this._TblUser = default(EntityRef<TblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(200)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoP", DbType="VarChar(200)")]
		public string strApellidoP
		{
			get
			{
				return this._strApellidoP;
			}
			set
			{
				if ((this._strApellidoP != value))
				{
					this.OnstrApellidoPChanging(value);
					this.SendPropertyChanging();
					this._strApellidoP = value;
					this.SendPropertyChanged("strApellidoP");
					this.OnstrApellidoPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoM", DbType="VarChar(200)")]
		public string strApellidoM
		{
			get
			{
				return this._strApellidoM;
			}
			set
			{
				if ((this._strApellidoM != value))
				{
					this.OnstrApellidoMChanging(value);
					this.SendPropertyChanging();
					this._strApellidoM = value;
					this.SendPropertyChanged("strApellidoM");
					this.OnstrApellidoMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEdad", DbType="Int")]
		public System.Nullable<int> intEdad
		{
			get
			{
				return this._intEdad;
			}
			set
			{
				if ((this._intEdad != value))
				{
					this.OnintEdadChanging(value);
					this.SendPropertyChanging();
					this._intEdad = value;
					this.SendPropertyChanged("intEdad");
					this.OnintEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strSexo", DbType="VarChar(100)")]
		public string strSexo
		{
			get
			{
				return this._strSexo;
			}
			set
			{
				if ((this._strSexo != value))
				{
					this.OnstrSexoChanging(value);
					this.SendPropertyChanging();
					this._strSexo = value;
					this.SendPropertyChanged("strSexo");
					this.OnstrSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCorreo", DbType="VarChar(200)")]
		public string strCorreo
		{
			get
			{
				return this._strCorreo;
			}
			set
			{
				if ((this._strCorreo != value))
				{
					this.OnstrCorreoChanging(value);
					this.SendPropertyChanging();
					this._strCorreo = value;
					this.SendPropertyChanged("strCorreo");
					this.OnstrCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intMatricula", DbType="Int")]
		public System.Nullable<int> intMatricula
		{
			get
			{
				return this._intMatricula;
			}
			set
			{
				if ((this._intMatricula != value))
				{
					this.OnintMatriculaChanging(value);
					this.SendPropertyChanging();
					this._intMatricula = value;
					this.SendPropertyChanged("intMatricula");
					this.OnintMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitFoto", DbType="VarChar(MAX)")]
		public string bitFoto
		{
			get
			{
				return this._bitFoto;
			}
			set
			{
				if ((this._bitFoto != value))
				{
					this.OnbitFotoChanging(value);
					this.SendPropertyChanging();
					this._bitFoto = value;
					this.SendPropertyChanged("bitFoto");
					this.OnbitFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDireccion", DbType="Int")]
		public System.Nullable<int> idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._TblDireccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTelefono", DbType="Int")]
		public System.Nullable<int> idTelefono
		{
			get
			{
				return this._idTelefono;
			}
			set
			{
				if ((this._idTelefono != value))
				{
					if (this._TblTelefono.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTelefonoChanging(value);
					this.SendPropertyChanging();
					this._idTelefono = value;
					this.SendPropertyChanged("idTelefono");
					this.OnidTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._TblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblAlumno_TblAlumnoMateria", Storage="_TblAlumnoMateria", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<TblAlumnoMateria> TblAlumnoMateria
		{
			get
			{
				return this._TblAlumnoMateria;
			}
			set
			{
				this._TblAlumnoMateria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblAlumno_TblAsistencia", Storage="_TblAsistencia", ThisKey="id", OtherKey="idAlumno")]
		public EntitySet<TblAsistencia> TblAsistencia
		{
			get
			{
				return this._TblAsistencia;
			}
			set
			{
				this._TblAsistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDireccion_TblAlumno", Storage="_TblDireccion", ThisKey="idDireccion", OtherKey="id", IsForeignKey=true)]
		public TblDireccion TblDireccion
		{
			get
			{
				return this._TblDireccion.Entity;
			}
			set
			{
				TblDireccion previousValue = this._TblDireccion.Entity;
				if (((previousValue != value) 
							|| (this._TblDireccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblDireccion.Entity = null;
						previousValue.TblAlumno.Remove(this);
					}
					this._TblDireccion.Entity = value;
					if ((value != null))
					{
						value.TblAlumno.Add(this);
						this._idDireccion = value.id;
					}
					else
					{
						this._idDireccion = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblDireccion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTelefono_TblAlumno", Storage="_TblTelefono", ThisKey="idTelefono", OtherKey="id", IsForeignKey=true)]
		public TblTelefono TblTelefono
		{
			get
			{
				return this._TblTelefono.Entity;
			}
			set
			{
				TblTelefono previousValue = this._TblTelefono.Entity;
				if (((previousValue != value) 
							|| (this._TblTelefono.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTelefono.Entity = null;
						previousValue.TblAlumno.Remove(this);
					}
					this._TblTelefono.Entity = value;
					if ((value != null))
					{
						value.TblAlumno.Add(this);
						this._idTelefono = value.id;
					}
					else
					{
						this._idTelefono = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblTelefono");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblAlumno", Storage="_TblUser", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public TblUser TblUser
		{
			get
			{
				return this._TblUser.Entity;
			}
			set
			{
				TblUser previousValue = this._TblUser.Entity;
				if (((previousValue != value) 
							|| (this._TblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblUser.Entity = null;
						previousValue.TblAlumno.Remove(this);
					}
					this._TblUser.Entity = value;
					if ((value != null))
					{
						value.TblAlumno.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblAlumnoMateria(TblAlumnoMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblAlumno = this;
		}
		
		private void detach_TblAlumnoMateria(TblAlumnoMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblAlumno = null;
		}
		
		private void attach_TblAsistencia(TblAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.TblAlumno = this;
		}
		
		private void detach_TblAsistencia(TblAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.TblAlumno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblAlumnoMateria")]
	public partial class TblAlumnoMateria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idAlumno;
		
		private System.Nullable<int> _idMateria;
		
		private System.Nullable<int> _idNotas;
		
		private EntityRef<TblAlumno> _TblAlumno;
		
		private EntityRef<TblMateria> _TblMateria;
		
		private EntityRef<TblNota> _TblNota;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidAlumnoChanging(System.Nullable<int> value);
    partial void OnidAlumnoChanged();
    partial void OnidMateriaChanging(System.Nullable<int> value);
    partial void OnidMateriaChanged();
    partial void OnidNotasChanging(System.Nullable<int> value);
    partial void OnidNotasChanged();
    #endregion
		
		public TblAlumnoMateria()
		{
			this._TblAlumno = default(EntityRef<TblAlumno>);
			this._TblMateria = default(EntityRef<TblMateria>);
			this._TblNota = default(EntityRef<TblNota>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int")]
		public System.Nullable<int> idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._TblAlumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMateria", DbType="Int")]
		public System.Nullable<int> idMateria
		{
			get
			{
				return this._idMateria;
			}
			set
			{
				if ((this._idMateria != value))
				{
					if (this._TblMateria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMateriaChanging(value);
					this.SendPropertyChanging();
					this._idMateria = value;
					this.SendPropertyChanged("idMateria");
					this.OnidMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNotas", DbType="Int")]
		public System.Nullable<int> idNotas
		{
			get
			{
				return this._idNotas;
			}
			set
			{
				if ((this._idNotas != value))
				{
					if (this._TblNota.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNotasChanging(value);
					this.SendPropertyChanging();
					this._idNotas = value;
					this.SendPropertyChanged("idNotas");
					this.OnidNotasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblAlumno_TblAlumnoMateria", Storage="_TblAlumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public TblAlumno TblAlumno
		{
			get
			{
				return this._TblAlumno.Entity;
			}
			set
			{
				TblAlumno previousValue = this._TblAlumno.Entity;
				if (((previousValue != value) 
							|| (this._TblAlumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblAlumno.Entity = null;
						previousValue.TblAlumnoMateria.Remove(this);
					}
					this._TblAlumno.Entity = value;
					if ((value != null))
					{
						value.TblAlumnoMateria.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblAlumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblMateria_TblAlumnoMateria", Storage="_TblMateria", ThisKey="idMateria", OtherKey="id", IsForeignKey=true)]
		public TblMateria TblMateria
		{
			get
			{
				return this._TblMateria.Entity;
			}
			set
			{
				TblMateria previousValue = this._TblMateria.Entity;
				if (((previousValue != value) 
							|| (this._TblMateria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblMateria.Entity = null;
						previousValue.TblAlumnoMateria.Remove(this);
					}
					this._TblMateria.Entity = value;
					if ((value != null))
					{
						value.TblAlumnoMateria.Add(this);
						this._idMateria = value.id;
					}
					else
					{
						this._idMateria = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblMateria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblNota_TblAlumnoMateria", Storage="_TblNota", ThisKey="idNotas", OtherKey="id", IsForeignKey=true)]
		public TblNota TblNota
		{
			get
			{
				return this._TblNota.Entity;
			}
			set
			{
				TblNota previousValue = this._TblNota.Entity;
				if (((previousValue != value) 
							|| (this._TblNota.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblNota.Entity = null;
						previousValue.TblAlumnoMateria.Remove(this);
					}
					this._TblNota.Entity = value;
					if ((value != null))
					{
						value.TblAlumnoMateria.Add(this);
						this._idNotas = value.id;
					}
					else
					{
						this._idNotas = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblNota");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblAsistencia")]
	public partial class TblAsistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _dteFecha;
		
		private System.Nullable<int> _idMateria;
		
		private System.Nullable<int> _idAlumno;
		
		private EntityRef<TblAlumno> _TblAlumno;
		
		private EntityRef<TblMateria> _TblMateria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndteFechaChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaChanged();
    partial void OnidMateriaChanging(System.Nullable<int> value);
    partial void OnidMateriaChanged();
    partial void OnidAlumnoChanging(System.Nullable<int> value);
    partial void OnidAlumnoChanged();
    #endregion
		
		public TblAsistencia()
		{
			this._TblAlumno = default(EntityRef<TblAlumno>);
			this._TblMateria = default(EntityRef<TblMateria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteFecha
		{
			get
			{
				return this._dteFecha;
			}
			set
			{
				if ((this._dteFecha != value))
				{
					this.OndteFechaChanging(value);
					this.SendPropertyChanging();
					this._dteFecha = value;
					this.SendPropertyChanged("dteFecha");
					this.OndteFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMateria", DbType="Int")]
		public System.Nullable<int> idMateria
		{
			get
			{
				return this._idMateria;
			}
			set
			{
				if ((this._idMateria != value))
				{
					if (this._TblMateria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMateriaChanging(value);
					this.SendPropertyChanging();
					this._idMateria = value;
					this.SendPropertyChanged("idMateria");
					this.OnidMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlumno", DbType="Int")]
		public System.Nullable<int> idAlumno
		{
			get
			{
				return this._idAlumno;
			}
			set
			{
				if ((this._idAlumno != value))
				{
					if (this._TblAlumno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlumnoChanging(value);
					this.SendPropertyChanging();
					this._idAlumno = value;
					this.SendPropertyChanged("idAlumno");
					this.OnidAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblAlumno_TblAsistencia", Storage="_TblAlumno", ThisKey="idAlumno", OtherKey="id", IsForeignKey=true)]
		public TblAlumno TblAlumno
		{
			get
			{
				return this._TblAlumno.Entity;
			}
			set
			{
				TblAlumno previousValue = this._TblAlumno.Entity;
				if (((previousValue != value) 
							|| (this._TblAlumno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblAlumno.Entity = null;
						previousValue.TblAsistencia.Remove(this);
					}
					this._TblAlumno.Entity = value;
					if ((value != null))
					{
						value.TblAsistencia.Add(this);
						this._idAlumno = value.id;
					}
					else
					{
						this._idAlumno = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblAlumno");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblMateria_TblAsistencia", Storage="_TblMateria", ThisKey="idMateria", OtherKey="id", IsForeignKey=true)]
		public TblMateria TblMateria
		{
			get
			{
				return this._TblMateria.Entity;
			}
			set
			{
				TblMateria previousValue = this._TblMateria.Entity;
				if (((previousValue != value) 
							|| (this._TblMateria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblMateria.Entity = null;
						previousValue.TblAsistencia.Remove(this);
					}
					this._TblMateria.Entity = value;
					if ((value != null))
					{
						value.TblAsistencia.Add(this);
						this._idMateria = value.id;
					}
					else
					{
						this._idMateria = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblMateria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCarrera")]
	public partial class TblCarrera : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strClave;
		
		private string _strNombre;
		
		private string _strArea;
		
		private EntitySet<TblCuatri> _TblCuatri;
		
		private EntitySet<TblGrupo> _TblGrupo;
		
		private EntitySet<TblMateria> _TblMateria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrClaveChanging(string value);
    partial void OnstrClaveChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrAreaChanging(string value);
    partial void OnstrAreaChanged();
    #endregion
		
		public TblCarrera()
		{
			this._TblCuatri = new EntitySet<TblCuatri>(new Action<TblCuatri>(this.attach_TblCuatri), new Action<TblCuatri>(this.detach_TblCuatri));
			this._TblGrupo = new EntitySet<TblGrupo>(new Action<TblGrupo>(this.attach_TblGrupo), new Action<TblGrupo>(this.detach_TblGrupo));
			this._TblMateria = new EntitySet<TblMateria>(new Action<TblMateria>(this.attach_TblMateria), new Action<TblMateria>(this.detach_TblMateria));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strClave", DbType="VarChar(200)")]
		public string strClave
		{
			get
			{
				return this._strClave;
			}
			set
			{
				if ((this._strClave != value))
				{
					this.OnstrClaveChanging(value);
					this.SendPropertyChanging();
					this._strClave = value;
					this.SendPropertyChanged("strClave");
					this.OnstrClaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(200)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strArea", DbType="VarChar(200)")]
		public string strArea
		{
			get
			{
				return this._strArea;
			}
			set
			{
				if ((this._strArea != value))
				{
					this.OnstrAreaChanging(value);
					this.SendPropertyChanging();
					this._strArea = value;
					this.SendPropertyChanged("strArea");
					this.OnstrAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCarrera_TblCuatri", Storage="_TblCuatri", ThisKey="id", OtherKey="idCarrera")]
		public EntitySet<TblCuatri> TblCuatri
		{
			get
			{
				return this._TblCuatri;
			}
			set
			{
				this._TblCuatri.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCarrera_TblGrupo", Storage="_TblGrupo", ThisKey="id", OtherKey="idCarrera")]
		public EntitySet<TblGrupo> TblGrupo
		{
			get
			{
				return this._TblGrupo;
			}
			set
			{
				this._TblGrupo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCarrera_TblMateria", Storage="_TblMateria", ThisKey="id", OtherKey="idCarrera")]
		public EntitySet<TblMateria> TblMateria
		{
			get
			{
				return this._TblMateria;
			}
			set
			{
				this._TblMateria.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblCuatri(TblCuatri entity)
		{
			this.SendPropertyChanging();
			entity.TblCarrera = this;
		}
		
		private void detach_TblCuatri(TblCuatri entity)
		{
			this.SendPropertyChanging();
			entity.TblCarrera = null;
		}
		
		private void attach_TblGrupo(TblGrupo entity)
		{
			this.SendPropertyChanging();
			entity.TblCarrera = this;
		}
		
		private void detach_TblGrupo(TblGrupo entity)
		{
			this.SendPropertyChanging();
			entity.TblCarrera = null;
		}
		
		private void attach_TblMateria(TblMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblCarrera = this;
		}
		
		private void detach_TblMateria(TblMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblCarrera = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCatalogoEvaluacion")]
	public partial class TblCatalogoEvaluacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strDescripcio;
		
		private EntitySet<TblCatalogoParcial> _TblCatalogoParcial;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrDescripcioChanging(string value);
    partial void OnstrDescripcioChanged();
    #endregion
		
		public TblCatalogoEvaluacion()
		{
			this._TblCatalogoParcial = new EntitySet<TblCatalogoParcial>(new Action<TblCatalogoParcial>(this.attach_TblCatalogoParcial), new Action<TblCatalogoParcial>(this.detach_TblCatalogoParcial));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcio", DbType="VarChar(300)")]
		public string strDescripcio
		{
			get
			{
				return this._strDescripcio;
			}
			set
			{
				if ((this._strDescripcio != value))
				{
					this.OnstrDescripcioChanging(value);
					this.SendPropertyChanging();
					this._strDescripcio = value;
					this.SendPropertyChanged("strDescripcio");
					this.OnstrDescripcioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCatalogoEvaluacion_TblCatalogoParcial", Storage="_TblCatalogoParcial", ThisKey="id", OtherKey="idCatalogoEvaluacion")]
		public EntitySet<TblCatalogoParcial> TblCatalogoParcial
		{
			get
			{
				return this._TblCatalogoParcial;
			}
			set
			{
				this._TblCatalogoParcial.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblCatalogoParcial(TblCatalogoParcial entity)
		{
			this.SendPropertyChanging();
			entity.TblCatalogoEvaluacion = this;
		}
		
		private void detach_TblCatalogoParcial(TblCatalogoParcial entity)
		{
			this.SendPropertyChanging();
			entity.TblCatalogoEvaluacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCatalogoParcial")]
	public partial class TblCatalogoParcial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strDescripcion;
		
		private string _strTipoEvaluacion;
		
		private System.Nullable<int> _idCatalogoEvaluacion;
		
		private EntitySet<TblMateria> _TblMateria;
		
		private EntityRef<TblCatalogoEvaluacion> _TblCatalogoEvaluacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    partial void OnstrTipoEvaluacionChanging(string value);
    partial void OnstrTipoEvaluacionChanged();
    partial void OnidCatalogoEvaluacionChanging(System.Nullable<int> value);
    partial void OnidCatalogoEvaluacionChanged();
    #endregion
		
		public TblCatalogoParcial()
		{
			this._TblMateria = new EntitySet<TblMateria>(new Action<TblMateria>(this.attach_TblMateria), new Action<TblMateria>(this.detach_TblMateria));
			this._TblCatalogoEvaluacion = default(EntityRef<TblCatalogoEvaluacion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(300)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strTipoEvaluacion", DbType="VarChar(100)")]
		public string strTipoEvaluacion
		{
			get
			{
				return this._strTipoEvaluacion;
			}
			set
			{
				if ((this._strTipoEvaluacion != value))
				{
					this.OnstrTipoEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._strTipoEvaluacion = value;
					this.SendPropertyChanged("strTipoEvaluacion");
					this.OnstrTipoEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCatalogoEvaluacion", DbType="Int")]
		public System.Nullable<int> idCatalogoEvaluacion
		{
			get
			{
				return this._idCatalogoEvaluacion;
			}
			set
			{
				if ((this._idCatalogoEvaluacion != value))
				{
					if (this._TblCatalogoEvaluacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCatalogoEvaluacionChanging(value);
					this.SendPropertyChanging();
					this._idCatalogoEvaluacion = value;
					this.SendPropertyChanged("idCatalogoEvaluacion");
					this.OnidCatalogoEvaluacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCatalogoParcial_TblMateria", Storage="_TblMateria", ThisKey="id", OtherKey="idCatalogoParcial")]
		public EntitySet<TblMateria> TblMateria
		{
			get
			{
				return this._TblMateria;
			}
			set
			{
				this._TblMateria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCatalogoEvaluacion_TblCatalogoParcial", Storage="_TblCatalogoEvaluacion", ThisKey="idCatalogoEvaluacion", OtherKey="id", IsForeignKey=true)]
		public TblCatalogoEvaluacion TblCatalogoEvaluacion
		{
			get
			{
				return this._TblCatalogoEvaluacion.Entity;
			}
			set
			{
				TblCatalogoEvaluacion previousValue = this._TblCatalogoEvaluacion.Entity;
				if (((previousValue != value) 
							|| (this._TblCatalogoEvaluacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCatalogoEvaluacion.Entity = null;
						previousValue.TblCatalogoParcial.Remove(this);
					}
					this._TblCatalogoEvaluacion.Entity = value;
					if ((value != null))
					{
						value.TblCatalogoParcial.Add(this);
						this._idCatalogoEvaluacion = value.id;
					}
					else
					{
						this._idCatalogoEvaluacion = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblCatalogoEvaluacion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblMateria(TblMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblCatalogoParcial = this;
		}
		
		private void detach_TblMateria(TblMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblCatalogoParcial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCuatri")]
	public partial class TblCuatri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strPeriodo;
		
		private System.Nullable<int> _idCarrera;
		
		private System.Nullable<int> _idMateria;
		
		private EntityRef<TblCarrera> _TblCarrera;
		
		private EntityRef<TblMateria> _TblMateria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrPeriodoChanging(string value);
    partial void OnstrPeriodoChanged();
    partial void OnidCarreraChanging(System.Nullable<int> value);
    partial void OnidCarreraChanged();
    partial void OnidMateriaChanging(System.Nullable<int> value);
    partial void OnidMateriaChanged();
    #endregion
		
		public TblCuatri()
		{
			this._TblCarrera = default(EntityRef<TblCarrera>);
			this._TblMateria = default(EntityRef<TblMateria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(200)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strPeriodo", DbType="VarChar(200)")]
		public string strPeriodo
		{
			get
			{
				return this._strPeriodo;
			}
			set
			{
				if ((this._strPeriodo != value))
				{
					this.OnstrPeriodoChanging(value);
					this.SendPropertyChanging();
					this._strPeriodo = value;
					this.SendPropertyChanged("strPeriodo");
					this.OnstrPeriodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCarrera", DbType="Int")]
		public System.Nullable<int> idCarrera
		{
			get
			{
				return this._idCarrera;
			}
			set
			{
				if ((this._idCarrera != value))
				{
					if (this._TblCarrera.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarreraChanging(value);
					this.SendPropertyChanging();
					this._idCarrera = value;
					this.SendPropertyChanged("idCarrera");
					this.OnidCarreraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMateria", DbType="Int")]
		public System.Nullable<int> idMateria
		{
			get
			{
				return this._idMateria;
			}
			set
			{
				if ((this._idMateria != value))
				{
					if (this._TblMateria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMateriaChanging(value);
					this.SendPropertyChanging();
					this._idMateria = value;
					this.SendPropertyChanged("idMateria");
					this.OnidMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCarrera_TblCuatri", Storage="_TblCarrera", ThisKey="idCarrera", OtherKey="id", IsForeignKey=true)]
		public TblCarrera TblCarrera
		{
			get
			{
				return this._TblCarrera.Entity;
			}
			set
			{
				TblCarrera previousValue = this._TblCarrera.Entity;
				if (((previousValue != value) 
							|| (this._TblCarrera.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCarrera.Entity = null;
						previousValue.TblCuatri.Remove(this);
					}
					this._TblCarrera.Entity = value;
					if ((value != null))
					{
						value.TblCuatri.Add(this);
						this._idCarrera = value.id;
					}
					else
					{
						this._idCarrera = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblCarrera");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblMateria_TblCuatri", Storage="_TblMateria", ThisKey="idMateria", OtherKey="id", IsForeignKey=true)]
		public TblMateria TblMateria
		{
			get
			{
				return this._TblMateria.Entity;
			}
			set
			{
				TblMateria previousValue = this._TblMateria.Entity;
				if (((previousValue != value) 
							|| (this._TblMateria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblMateria.Entity = null;
						previousValue.TblCuatri.Remove(this);
					}
					this._TblMateria.Entity = value;
					if ((value != null))
					{
						value.TblCuatri.Add(this);
						this._idMateria = value.id;
					}
					else
					{
						this._idMateria = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblMateria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblDireccion")]
	public partial class TblDireccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strestado;
		
		private string _strmunicipio;
		
		private string _strcolonia;
		
		private string _strcalle;
		
		private System.Nullable<int> _intcodpost;
		
		private string _strnumInt;
		
		private string _strnumExt;
		
		private string _strreferencias;
		
		private EntitySet<TblAlumno> _TblAlumno;
		
		private EntitySet<TblProfesor> _TblProfesor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrestadoChanging(string value);
    partial void OnstrestadoChanged();
    partial void OnstrmunicipioChanging(string value);
    partial void OnstrmunicipioChanged();
    partial void OnstrcoloniaChanging(string value);
    partial void OnstrcoloniaChanged();
    partial void OnstrcalleChanging(string value);
    partial void OnstrcalleChanged();
    partial void OnintcodpostChanging(System.Nullable<int> value);
    partial void OnintcodpostChanged();
    partial void OnstrnumIntChanging(string value);
    partial void OnstrnumIntChanged();
    partial void OnstrnumExtChanging(string value);
    partial void OnstrnumExtChanged();
    partial void OnstrreferenciasChanging(string value);
    partial void OnstrreferenciasChanged();
    #endregion
		
		public TblDireccion()
		{
			this._TblAlumno = new EntitySet<TblAlumno>(new Action<TblAlumno>(this.attach_TblAlumno), new Action<TblAlumno>(this.detach_TblAlumno));
			this._TblProfesor = new EntitySet<TblProfesor>(new Action<TblProfesor>(this.attach_TblProfesor), new Action<TblProfesor>(this.detach_TblProfesor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strestado", DbType="VarChar(150)")]
		public string strestado
		{
			get
			{
				return this._strestado;
			}
			set
			{
				if ((this._strestado != value))
				{
					this.OnstrestadoChanging(value);
					this.SendPropertyChanging();
					this._strestado = value;
					this.SendPropertyChanged("strestado");
					this.OnstrestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strmunicipio", DbType="VarChar(150)")]
		public string strmunicipio
		{
			get
			{
				return this._strmunicipio;
			}
			set
			{
				if ((this._strmunicipio != value))
				{
					this.OnstrmunicipioChanging(value);
					this.SendPropertyChanging();
					this._strmunicipio = value;
					this.SendPropertyChanged("strmunicipio");
					this.OnstrmunicipioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strcolonia", DbType="VarChar(150)")]
		public string strcolonia
		{
			get
			{
				return this._strcolonia;
			}
			set
			{
				if ((this._strcolonia != value))
				{
					this.OnstrcoloniaChanging(value);
					this.SendPropertyChanging();
					this._strcolonia = value;
					this.SendPropertyChanged("strcolonia");
					this.OnstrcoloniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strcalle", DbType="VarChar(150)")]
		public string strcalle
		{
			get
			{
				return this._strcalle;
			}
			set
			{
				if ((this._strcalle != value))
				{
					this.OnstrcalleChanging(value);
					this.SendPropertyChanging();
					this._strcalle = value;
					this.SendPropertyChanged("strcalle");
					this.OnstrcalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intcodpost", DbType="Int")]
		public System.Nullable<int> intcodpost
		{
			get
			{
				return this._intcodpost;
			}
			set
			{
				if ((this._intcodpost != value))
				{
					this.OnintcodpostChanging(value);
					this.SendPropertyChanging();
					this._intcodpost = value;
					this.SendPropertyChanged("intcodpost");
					this.OnintcodpostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strnumInt", DbType="VarChar(50)")]
		public string strnumInt
		{
			get
			{
				return this._strnumInt;
			}
			set
			{
				if ((this._strnumInt != value))
				{
					this.OnstrnumIntChanging(value);
					this.SendPropertyChanging();
					this._strnumInt = value;
					this.SendPropertyChanged("strnumInt");
					this.OnstrnumIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strnumExt", DbType="VarChar(50)")]
		public string strnumExt
		{
			get
			{
				return this._strnumExt;
			}
			set
			{
				if ((this._strnumExt != value))
				{
					this.OnstrnumExtChanging(value);
					this.SendPropertyChanging();
					this._strnumExt = value;
					this.SendPropertyChanged("strnumExt");
					this.OnstrnumExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strreferencias", DbType="VarChar(400)")]
		public string strreferencias
		{
			get
			{
				return this._strreferencias;
			}
			set
			{
				if ((this._strreferencias != value))
				{
					this.OnstrreferenciasChanging(value);
					this.SendPropertyChanging();
					this._strreferencias = value;
					this.SendPropertyChanged("strreferencias");
					this.OnstrreferenciasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDireccion_TblAlumno", Storage="_TblAlumno", ThisKey="id", OtherKey="idDireccion")]
		public EntitySet<TblAlumno> TblAlumno
		{
			get
			{
				return this._TblAlumno;
			}
			set
			{
				this._TblAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDireccion_TblProfesor", Storage="_TblProfesor", ThisKey="id", OtherKey="idDireccion")]
		public EntitySet<TblProfesor> TblProfesor
		{
			get
			{
				return this._TblProfesor;
			}
			set
			{
				this._TblProfesor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblAlumno(TblAlumno entity)
		{
			this.SendPropertyChanging();
			entity.TblDireccion = this;
		}
		
		private void detach_TblAlumno(TblAlumno entity)
		{
			this.SendPropertyChanging();
			entity.TblDireccion = null;
		}
		
		private void attach_TblProfesor(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblDireccion = this;
		}
		
		private void detach_TblProfesor(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblDireccion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblGrupo")]
	public partial class TblGrupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strCapacidad;
		
		private System.Nullable<int> _idCarrera;
		
		private EntitySet<TblProfesor> _TblProfesor;
		
		private EntityRef<TblCarrera> _TblCarrera;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrCapacidadChanging(string value);
    partial void OnstrCapacidadChanged();
    partial void OnidCarreraChanging(System.Nullable<int> value);
    partial void OnidCarreraChanged();
    #endregion
		
		public TblGrupo()
		{
			this._TblProfesor = new EntitySet<TblProfesor>(new Action<TblProfesor>(this.attach_TblProfesor), new Action<TblProfesor>(this.detach_TblProfesor));
			this._TblCarrera = default(EntityRef<TblCarrera>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(200)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCapacidad", DbType="VarChar(200)")]
		public string strCapacidad
		{
			get
			{
				return this._strCapacidad;
			}
			set
			{
				if ((this._strCapacidad != value))
				{
					this.OnstrCapacidadChanging(value);
					this.SendPropertyChanging();
					this._strCapacidad = value;
					this.SendPropertyChanged("strCapacidad");
					this.OnstrCapacidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCarrera", DbType="Int")]
		public System.Nullable<int> idCarrera
		{
			get
			{
				return this._idCarrera;
			}
			set
			{
				if ((this._idCarrera != value))
				{
					if (this._TblCarrera.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarreraChanging(value);
					this.SendPropertyChanging();
					this._idCarrera = value;
					this.SendPropertyChanged("idCarrera");
					this.OnidCarreraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblGrupo_TblProfesor", Storage="_TblProfesor", ThisKey="id", OtherKey="idGrupo")]
		public EntitySet<TblProfesor> TblProfesor
		{
			get
			{
				return this._TblProfesor;
			}
			set
			{
				this._TblProfesor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCarrera_TblGrupo", Storage="_TblCarrera", ThisKey="idCarrera", OtherKey="id", IsForeignKey=true)]
		public TblCarrera TblCarrera
		{
			get
			{
				return this._TblCarrera.Entity;
			}
			set
			{
				TblCarrera previousValue = this._TblCarrera.Entity;
				if (((previousValue != value) 
							|| (this._TblCarrera.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCarrera.Entity = null;
						previousValue.TblGrupo.Remove(this);
					}
					this._TblCarrera.Entity = value;
					if ((value != null))
					{
						value.TblGrupo.Add(this);
						this._idCarrera = value.id;
					}
					else
					{
						this._idCarrera = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblCarrera");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblProfesor(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblGrupo = this;
		}
		
		private void detach_TblProfesor(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblGrupo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblMateria")]
	public partial class TblMateria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strDescripcion;
		
		private string _bStatus;
		
		private System.Nullable<int> _idCatalogoParcial;
		
		private System.Nullable<int> _idNota;
		
		private System.Nullable<int> _idCarrera;
		
		private EntitySet<TblAlumnoMateria> _TblAlumnoMateria;
		
		private EntitySet<TblAsistencia> _TblAsistencia;
		
		private EntitySet<TblCuatri> _TblCuatri;
		
		private EntityRef<TblCarrera> _TblCarrera;
		
		private EntityRef<TblCatalogoParcial> _TblCatalogoParcial;
		
		private EntityRef<TblNota> _TblNota;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    partial void OnbStatusChanging(string value);
    partial void OnbStatusChanged();
    partial void OnidCatalogoParcialChanging(System.Nullable<int> value);
    partial void OnidCatalogoParcialChanged();
    partial void OnidNotaChanging(System.Nullable<int> value);
    partial void OnidNotaChanged();
    partial void OnidCarreraChanging(System.Nullable<int> value);
    partial void OnidCarreraChanged();
    #endregion
		
		public TblMateria()
		{
			this._TblAlumnoMateria = new EntitySet<TblAlumnoMateria>(new Action<TblAlumnoMateria>(this.attach_TblAlumnoMateria), new Action<TblAlumnoMateria>(this.detach_TblAlumnoMateria));
			this._TblAsistencia = new EntitySet<TblAsistencia>(new Action<TblAsistencia>(this.attach_TblAsistencia), new Action<TblAsistencia>(this.detach_TblAsistencia));
			this._TblCuatri = new EntitySet<TblCuatri>(new Action<TblCuatri>(this.attach_TblCuatri), new Action<TblCuatri>(this.detach_TblCuatri));
			this._TblCarrera = default(EntityRef<TblCarrera>);
			this._TblCatalogoParcial = default(EntityRef<TblCatalogoParcial>);
			this._TblNota = default(EntityRef<TblNota>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(200)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bStatus", DbType="VarChar(10)")]
		public string bStatus
		{
			get
			{
				return this._bStatus;
			}
			set
			{
				if ((this._bStatus != value))
				{
					this.OnbStatusChanging(value);
					this.SendPropertyChanging();
					this._bStatus = value;
					this.SendPropertyChanged("bStatus");
					this.OnbStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCatalogoParcial", DbType="Int")]
		public System.Nullable<int> idCatalogoParcial
		{
			get
			{
				return this._idCatalogoParcial;
			}
			set
			{
				if ((this._idCatalogoParcial != value))
				{
					if (this._TblCatalogoParcial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCatalogoParcialChanging(value);
					this.SendPropertyChanging();
					this._idCatalogoParcial = value;
					this.SendPropertyChanged("idCatalogoParcial");
					this.OnidCatalogoParcialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idNota", DbType="Int")]
		public System.Nullable<int> idNota
		{
			get
			{
				return this._idNota;
			}
			set
			{
				if ((this._idNota != value))
				{
					if (this._TblNota.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidNotaChanging(value);
					this.SendPropertyChanging();
					this._idNota = value;
					this.SendPropertyChanged("idNota");
					this.OnidNotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCarrera", DbType="Int")]
		public System.Nullable<int> idCarrera
		{
			get
			{
				return this._idCarrera;
			}
			set
			{
				if ((this._idCarrera != value))
				{
					if (this._TblCarrera.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarreraChanging(value);
					this.SendPropertyChanging();
					this._idCarrera = value;
					this.SendPropertyChanged("idCarrera");
					this.OnidCarreraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblMateria_TblAlumnoMateria", Storage="_TblAlumnoMateria", ThisKey="id", OtherKey="idMateria")]
		public EntitySet<TblAlumnoMateria> TblAlumnoMateria
		{
			get
			{
				return this._TblAlumnoMateria;
			}
			set
			{
				this._TblAlumnoMateria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblMateria_TblAsistencia", Storage="_TblAsistencia", ThisKey="id", OtherKey="idMateria")]
		public EntitySet<TblAsistencia> TblAsistencia
		{
			get
			{
				return this._TblAsistencia;
			}
			set
			{
				this._TblAsistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblMateria_TblCuatri", Storage="_TblCuatri", ThisKey="id", OtherKey="idMateria")]
		public EntitySet<TblCuatri> TblCuatri
		{
			get
			{
				return this._TblCuatri;
			}
			set
			{
				this._TblCuatri.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCarrera_TblMateria", Storage="_TblCarrera", ThisKey="idCarrera", OtherKey="id", IsForeignKey=true)]
		public TblCarrera TblCarrera
		{
			get
			{
				return this._TblCarrera.Entity;
			}
			set
			{
				TblCarrera previousValue = this._TblCarrera.Entity;
				if (((previousValue != value) 
							|| (this._TblCarrera.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCarrera.Entity = null;
						previousValue.TblMateria.Remove(this);
					}
					this._TblCarrera.Entity = value;
					if ((value != null))
					{
						value.TblMateria.Add(this);
						this._idCarrera = value.id;
					}
					else
					{
						this._idCarrera = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblCarrera");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCatalogoParcial_TblMateria", Storage="_TblCatalogoParcial", ThisKey="idCatalogoParcial", OtherKey="id", IsForeignKey=true)]
		public TblCatalogoParcial TblCatalogoParcial
		{
			get
			{
				return this._TblCatalogoParcial.Entity;
			}
			set
			{
				TblCatalogoParcial previousValue = this._TblCatalogoParcial.Entity;
				if (((previousValue != value) 
							|| (this._TblCatalogoParcial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCatalogoParcial.Entity = null;
						previousValue.TblMateria.Remove(this);
					}
					this._TblCatalogoParcial.Entity = value;
					if ((value != null))
					{
						value.TblMateria.Add(this);
						this._idCatalogoParcial = value.id;
					}
					else
					{
						this._idCatalogoParcial = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblCatalogoParcial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblNota_TblMateria", Storage="_TblNota", ThisKey="idNota", OtherKey="id", IsForeignKey=true)]
		public TblNota TblNota
		{
			get
			{
				return this._TblNota.Entity;
			}
			set
			{
				TblNota previousValue = this._TblNota.Entity;
				if (((previousValue != value) 
							|| (this._TblNota.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblNota.Entity = null;
						previousValue.TblMateria.Remove(this);
					}
					this._TblNota.Entity = value;
					if ((value != null))
					{
						value.TblMateria.Add(this);
						this._idNota = value.id;
					}
					else
					{
						this._idNota = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblNota");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblAlumnoMateria(TblAlumnoMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblMateria = this;
		}
		
		private void detach_TblAlumnoMateria(TblAlumnoMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblMateria = null;
		}
		
		private void attach_TblAsistencia(TblAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.TblMateria = this;
		}
		
		private void detach_TblAsistencia(TblAsistencia entity)
		{
			this.SendPropertyChanging();
			entity.TblMateria = null;
		}
		
		private void attach_TblCuatri(TblCuatri entity)
		{
			this.SendPropertyChanging();
			entity.TblMateria = this;
		}
		
		private void detach_TblCuatri(TblCuatri entity)
		{
			this.SendPropertyChanging();
			entity.TblMateria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblNota")]
	public partial class TblNota : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strDescripcion;
		
		private EntitySet<TblAlumnoMateria> _TblAlumnoMateria;
		
		private EntitySet<TblMateria> _TblMateria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public TblNota()
		{
			this._TblAlumnoMateria = new EntitySet<TblAlumnoMateria>(new Action<TblAlumnoMateria>(this.attach_TblAlumnoMateria), new Action<TblAlumnoMateria>(this.detach_TblAlumnoMateria));
			this._TblMateria = new EntitySet<TblMateria>(new Action<TblMateria>(this.attach_TblMateria), new Action<TblMateria>(this.detach_TblMateria));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="VarChar(1000)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblNota_TblAlumnoMateria", Storage="_TblAlumnoMateria", ThisKey="id", OtherKey="idNotas")]
		public EntitySet<TblAlumnoMateria> TblAlumnoMateria
		{
			get
			{
				return this._TblAlumnoMateria;
			}
			set
			{
				this._TblAlumnoMateria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblNota_TblMateria", Storage="_TblMateria", ThisKey="id", OtherKey="idNota")]
		public EntitySet<TblMateria> TblMateria
		{
			get
			{
				return this._TblMateria;
			}
			set
			{
				this._TblMateria.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblAlumnoMateria(TblAlumnoMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblNota = this;
		}
		
		private void detach_TblAlumnoMateria(TblAlumnoMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblNota = null;
		}
		
		private void attach_TblMateria(TblMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblNota = this;
		}
		
		private void detach_TblMateria(TblMateria entity)
		{
			this.SendPropertyChanging();
			entity.TblNota = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblProfesor")]
	public partial class TblProfesor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strNombre;
		
		private string _strApellidoP;
		
		private string _strApellidoM;
		
		private System.Nullable<int> _intEdad;
		
		private string _strSexo;
		
		private string _strCorreo;
		
		private string _bitFoto;
		
		private string _strCedula;
		
		private string _strEspecialidad;
		
		private System.Nullable<int> _idDireccion;
		
		private System.Nullable<int> _idTelefono;
		
		private System.Nullable<int> _idUser;
		
		private System.Nullable<int> _idGrupo;
		
		private EntityRef<TblDireccion> _TblDireccion;
		
		private EntityRef<TblGrupo> _TblGrupo;
		
		private EntityRef<TblTelefono> _TblTelefono;
		
		private EntityRef<TblUser> _TblUser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrApellidoPChanging(string value);
    partial void OnstrApellidoPChanged();
    partial void OnstrApellidoMChanging(string value);
    partial void OnstrApellidoMChanged();
    partial void OnintEdadChanging(System.Nullable<int> value);
    partial void OnintEdadChanged();
    partial void OnstrSexoChanging(string value);
    partial void OnstrSexoChanged();
    partial void OnstrCorreoChanging(string value);
    partial void OnstrCorreoChanged();
    partial void OnbitFotoChanging(string value);
    partial void OnbitFotoChanged();
    partial void OnstrCedulaChanging(string value);
    partial void OnstrCedulaChanged();
    partial void OnstrEspecialidadChanging(string value);
    partial void OnstrEspecialidadChanged();
    partial void OnidDireccionChanging(System.Nullable<int> value);
    partial void OnidDireccionChanged();
    partial void OnidTelefonoChanging(System.Nullable<int> value);
    partial void OnidTelefonoChanged();
    partial void OnidUserChanging(System.Nullable<int> value);
    partial void OnidUserChanged();
    partial void OnidGrupoChanging(System.Nullable<int> value);
    partial void OnidGrupoChanged();
    #endregion
		
		public TblProfesor()
		{
			this._TblDireccion = default(EntityRef<TblDireccion>);
			this._TblGrupo = default(EntityRef<TblGrupo>);
			this._TblTelefono = default(EntityRef<TblTelefono>);
			this._TblUser = default(EntityRef<TblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="VarChar(200)")]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoP", DbType="VarChar(200)")]
		public string strApellidoP
		{
			get
			{
				return this._strApellidoP;
			}
			set
			{
				if ((this._strApellidoP != value))
				{
					this.OnstrApellidoPChanging(value);
					this.SendPropertyChanging();
					this._strApellidoP = value;
					this.SendPropertyChanged("strApellidoP");
					this.OnstrApellidoPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strApellidoM", DbType="VarChar(200)")]
		public string strApellidoM
		{
			get
			{
				return this._strApellidoM;
			}
			set
			{
				if ((this._strApellidoM != value))
				{
					this.OnstrApellidoMChanging(value);
					this.SendPropertyChanging();
					this._strApellidoM = value;
					this.SendPropertyChanged("strApellidoM");
					this.OnstrApellidoMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intEdad", DbType="Int")]
		public System.Nullable<int> intEdad
		{
			get
			{
				return this._intEdad;
			}
			set
			{
				if ((this._intEdad != value))
				{
					this.OnintEdadChanging(value);
					this.SendPropertyChanging();
					this._intEdad = value;
					this.SendPropertyChanged("intEdad");
					this.OnintEdadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strSexo", DbType="VarChar(100)")]
		public string strSexo
		{
			get
			{
				return this._strSexo;
			}
			set
			{
				if ((this._strSexo != value))
				{
					this.OnstrSexoChanging(value);
					this.SendPropertyChanging();
					this._strSexo = value;
					this.SendPropertyChanged("strSexo");
					this.OnstrSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCorreo", DbType="VarChar(200)")]
		public string strCorreo
		{
			get
			{
				return this._strCorreo;
			}
			set
			{
				if ((this._strCorreo != value))
				{
					this.OnstrCorreoChanging(value);
					this.SendPropertyChanging();
					this._strCorreo = value;
					this.SendPropertyChanged("strCorreo");
					this.OnstrCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitFoto", DbType="VarChar(MAX)")]
		public string bitFoto
		{
			get
			{
				return this._bitFoto;
			}
			set
			{
				if ((this._bitFoto != value))
				{
					this.OnbitFotoChanging(value);
					this.SendPropertyChanging();
					this._bitFoto = value;
					this.SendPropertyChanged("bitFoto");
					this.OnbitFotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCedula", DbType="VarChar(200)")]
		public string strCedula
		{
			get
			{
				return this._strCedula;
			}
			set
			{
				if ((this._strCedula != value))
				{
					this.OnstrCedulaChanging(value);
					this.SendPropertyChanging();
					this._strCedula = value;
					this.SendPropertyChanged("strCedula");
					this.OnstrCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strEspecialidad", DbType="VarChar(200)")]
		public string strEspecialidad
		{
			get
			{
				return this._strEspecialidad;
			}
			set
			{
				if ((this._strEspecialidad != value))
				{
					this.OnstrEspecialidadChanging(value);
					this.SendPropertyChanging();
					this._strEspecialidad = value;
					this.SendPropertyChanged("strEspecialidad");
					this.OnstrEspecialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDireccion", DbType="Int")]
		public System.Nullable<int> idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._TblDireccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTelefono", DbType="Int")]
		public System.Nullable<int> idTelefono
		{
			get
			{
				return this._idTelefono;
			}
			set
			{
				if ((this._idTelefono != value))
				{
					if (this._TblTelefono.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTelefonoChanging(value);
					this.SendPropertyChanging();
					this._idTelefono = value;
					this.SendPropertyChanged("idTelefono");
					this.OnidTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int")]
		public System.Nullable<int> idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._TblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGrupo", DbType="Int")]
		public System.Nullable<int> idGrupo
		{
			get
			{
				return this._idGrupo;
			}
			set
			{
				if ((this._idGrupo != value))
				{
					if (this._TblGrupo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGrupoChanging(value);
					this.SendPropertyChanging();
					this._idGrupo = value;
					this.SendPropertyChanged("idGrupo");
					this.OnidGrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblDireccion_TblProfesor", Storage="_TblDireccion", ThisKey="idDireccion", OtherKey="id", IsForeignKey=true)]
		public TblDireccion TblDireccion
		{
			get
			{
				return this._TblDireccion.Entity;
			}
			set
			{
				TblDireccion previousValue = this._TblDireccion.Entity;
				if (((previousValue != value) 
							|| (this._TblDireccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblDireccion.Entity = null;
						previousValue.TblProfesor.Remove(this);
					}
					this._TblDireccion.Entity = value;
					if ((value != null))
					{
						value.TblProfesor.Add(this);
						this._idDireccion = value.id;
					}
					else
					{
						this._idDireccion = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblDireccion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblGrupo_TblProfesor", Storage="_TblGrupo", ThisKey="idGrupo", OtherKey="id", IsForeignKey=true)]
		public TblGrupo TblGrupo
		{
			get
			{
				return this._TblGrupo.Entity;
			}
			set
			{
				TblGrupo previousValue = this._TblGrupo.Entity;
				if (((previousValue != value) 
							|| (this._TblGrupo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblGrupo.Entity = null;
						previousValue.TblProfesor.Remove(this);
					}
					this._TblGrupo.Entity = value;
					if ((value != null))
					{
						value.TblProfesor.Add(this);
						this._idGrupo = value.id;
					}
					else
					{
						this._idGrupo = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblGrupo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTelefono_TblProfesor", Storage="_TblTelefono", ThisKey="idTelefono", OtherKey="id", IsForeignKey=true)]
		public TblTelefono TblTelefono
		{
			get
			{
				return this._TblTelefono.Entity;
			}
			set
			{
				TblTelefono previousValue = this._TblTelefono.Entity;
				if (((previousValue != value) 
							|| (this._TblTelefono.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblTelefono.Entity = null;
						previousValue.TblProfesor.Remove(this);
					}
					this._TblTelefono.Entity = value;
					if ((value != null))
					{
						value.TblProfesor.Add(this);
						this._idTelefono = value.id;
					}
					else
					{
						this._idTelefono = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblTelefono");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblProfesor", Storage="_TblUser", ThisKey="idUser", OtherKey="id", IsForeignKey=true)]
		public TblUser TblUser
		{
			get
			{
				return this._TblUser.Entity;
			}
			set
			{
				TblUser previousValue = this._TblUser.Entity;
				if (((previousValue != value) 
							|| (this._TblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblUser.Entity = null;
						previousValue.TblProfesor.Remove(this);
					}
					this._TblUser.Entity = value;
					if ((value != null))
					{
						value.TblProfesor.Add(this);
						this._idUser = value.id;
					}
					else
					{
						this._idUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblTelefono")]
	public partial class TblTelefono : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strcelular;
		
		private string _strtelCasa;
		
		private string _strotro;
		
		private EntitySet<TblAlumno> _TblAlumno;
		
		private EntitySet<TblProfesor> _TblProfesor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrcelularChanging(string value);
    partial void OnstrcelularChanged();
    partial void OnstrtelCasaChanging(string value);
    partial void OnstrtelCasaChanged();
    partial void OnstrotroChanging(string value);
    partial void OnstrotroChanged();
    #endregion
		
		public TblTelefono()
		{
			this._TblAlumno = new EntitySet<TblAlumno>(new Action<TblAlumno>(this.attach_TblAlumno), new Action<TblAlumno>(this.detach_TblAlumno));
			this._TblProfesor = new EntitySet<TblProfesor>(new Action<TblProfesor>(this.attach_TblProfesor), new Action<TblProfesor>(this.detach_TblProfesor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strcelular", DbType="VarChar(50)")]
		public string strcelular
		{
			get
			{
				return this._strcelular;
			}
			set
			{
				if ((this._strcelular != value))
				{
					this.OnstrcelularChanging(value);
					this.SendPropertyChanging();
					this._strcelular = value;
					this.SendPropertyChanged("strcelular");
					this.OnstrcelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strtelCasa", DbType="VarChar(50)")]
		public string strtelCasa
		{
			get
			{
				return this._strtelCasa;
			}
			set
			{
				if ((this._strtelCasa != value))
				{
					this.OnstrtelCasaChanging(value);
					this.SendPropertyChanging();
					this._strtelCasa = value;
					this.SendPropertyChanged("strtelCasa");
					this.OnstrtelCasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strotro", DbType="VarChar(50)")]
		public string strotro
		{
			get
			{
				return this._strotro;
			}
			set
			{
				if ((this._strotro != value))
				{
					this.OnstrotroChanging(value);
					this.SendPropertyChanging();
					this._strotro = value;
					this.SendPropertyChanged("strotro");
					this.OnstrotroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTelefono_TblAlumno", Storage="_TblAlumno", ThisKey="id", OtherKey="idTelefono")]
		public EntitySet<TblAlumno> TblAlumno
		{
			get
			{
				return this._TblAlumno;
			}
			set
			{
				this._TblAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblTelefono_TblProfesor", Storage="_TblProfesor", ThisKey="id", OtherKey="idTelefono")]
		public EntitySet<TblProfesor> TblProfesor
		{
			get
			{
				return this._TblProfesor;
			}
			set
			{
				this._TblProfesor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblAlumno(TblAlumno entity)
		{
			this.SendPropertyChanging();
			entity.TblTelefono = this;
		}
		
		private void detach_TblAlumno(TblAlumno entity)
		{
			this.SendPropertyChanging();
			entity.TblTelefono = null;
		}
		
		private void attach_TblProfesor(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblTelefono = this;
		}
		
		private void detach_TblProfesor(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblTelefono = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblUser")]
	public partial class TblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strusuario;
		
		private string _strpass;
		
		private string _strtipoUsuario;
		
		private EntitySet<TblAlumno> _TblAlumno;
		
		private EntitySet<TblProfesor> _TblProfesor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrusuarioChanging(string value);
    partial void OnstrusuarioChanged();
    partial void OnstrpassChanging(string value);
    partial void OnstrpassChanged();
    partial void OnstrtipoUsuarioChanging(string value);
    partial void OnstrtipoUsuarioChanged();
    #endregion
		
		public TblUser()
		{
			this._TblAlumno = new EntitySet<TblAlumno>(new Action<TblAlumno>(this.attach_TblAlumno), new Action<TblAlumno>(this.detach_TblAlumno));
			this._TblProfesor = new EntitySet<TblProfesor>(new Action<TblProfesor>(this.attach_TblProfesor), new Action<TblProfesor>(this.detach_TblProfesor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strusuario", DbType="VarChar(200)")]
		public string strusuario
		{
			get
			{
				return this._strusuario;
			}
			set
			{
				if ((this._strusuario != value))
				{
					this.OnstrusuarioChanging(value);
					this.SendPropertyChanging();
					this._strusuario = value;
					this.SendPropertyChanged("strusuario");
					this.OnstrusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strpass", DbType="VarChar(200)")]
		public string strpass
		{
			get
			{
				return this._strpass;
			}
			set
			{
				if ((this._strpass != value))
				{
					this.OnstrpassChanging(value);
					this.SendPropertyChanging();
					this._strpass = value;
					this.SendPropertyChanged("strpass");
					this.OnstrpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strtipoUsuario", DbType="VarChar(150)")]
		public string strtipoUsuario
		{
			get
			{
				return this._strtipoUsuario;
			}
			set
			{
				if ((this._strtipoUsuario != value))
				{
					this.OnstrtipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._strtipoUsuario = value;
					this.SendPropertyChanged("strtipoUsuario");
					this.OnstrtipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblAlumno", Storage="_TblAlumno", ThisKey="id", OtherKey="idUser")]
		public EntitySet<TblAlumno> TblAlumno
		{
			get
			{
				return this._TblAlumno;
			}
			set
			{
				this._TblAlumno.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblProfesor", Storage="_TblProfesor", ThisKey="id", OtherKey="idUser")]
		public EntitySet<TblProfesor> TblProfesor
		{
			get
			{
				return this._TblProfesor;
			}
			set
			{
				this._TblProfesor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblAlumno(TblAlumno entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = this;
		}
		
		private void detach_TblAlumno(TblAlumno entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = null;
		}
		
		private void attach_TblProfesor(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = this;
		}
		
		private void detach_TblProfesor(TblProfesor entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = null;
		}
	}
}
#pragma warning restore 1591
